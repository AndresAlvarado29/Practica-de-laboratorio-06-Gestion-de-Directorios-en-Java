/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.edu.ups.vista;

import ec.edu.ups.controlador.ControladorDirectorio;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author HI andres
 */
public class VentanaPrincipal extends javax.swing.JFrame {
private ControladorDirectorio controladorDirectorio;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        controladorDirectorio = new ControladorDirectorio(jTextField1.getText());
        
    }
private void mostrarLista(List<String> rutaL) {
        DefaultListModel modelo = new DefaultListModel();
        modelo.clear();
        for (String directorios : rutaL) {
            modelo.addElement(directorios);
        }
        listaDeDirectorios.setModel(modelo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaDeDirectorios = new javax.swing.JList<>();
        btnListarDO = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMostrarInformacion = new javax.swing.JTextArea();
        btnListarD = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnMostrar = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        btnListarA = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuGestionar = new javax.swing.JMenu();
        jCrear = new javax.swing.JMenuItem();
        jEliminar = new javax.swing.JMenuItem();
        jRenombrar = new javax.swing.JMenuItem();
        jSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jScrollPane2.setViewportView(listaDeDirectorios);

        btnListarDO.setText("Listar Directorios Ocultos");
        btnListarDO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarDOActionPerformed(evt);
            }
        });

        jMostrarInformacion.setColumns(20);
        jMostrarInformacion.setRows(5);
        jScrollPane1.setViewportView(jMostrarInformacion);

        btnListarD.setText("Listar Directorios");
        btnListarD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarDActionPerformed(evt);
            }
        });

        jLabel1.setText("Ruta:");

        btnMostrar.setText("Mostrar Informacion");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        btnListarA.setText("Listar Archivos Ocultos");
        btnListarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnListarD)
                        .addGap(18, 18, 18)
                        .addComponent(btnListarDO)
                        .addGap(39, 39, 39)
                        .addComponent(btnListarA)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnMostrar)
                                .addGap(76, 76, 76))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(11, Short.MAX_VALUE))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListarDO)
                    .addComponent(btnListarD)
                    .addComponent(btnListarA))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMostrar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 7, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jMenuGestionar.setText("Gestionar Directorio");

        jCrear.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jCrear.setText("Crear");
        jCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCrearActionPerformed(evt);
            }
        });
        jMenuGestionar.add(jCrear);

        jEliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jEliminar.setText("Eliminar");
        jEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEliminarActionPerformed(evt);
            }
        });
        jMenuGestionar.add(jEliminar);

        jRenombrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jRenombrar.setText("Renombrar");
        jRenombrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRenombrarActionPerformed(evt);
            }
        });
        jMenuGestionar.add(jRenombrar);

        jSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, java.awt.event.InputEvent.CTRL_MASK));
        jSalir.setText("Salir");
        jSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalirActionPerformed(evt);
            }
        });
        jMenuGestionar.add(jSalir);

        jMenuBar1.add(jMenuGestionar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEliminarActionPerformed
         String eliminarDirectorio = listaDeDirectorios.getSelectedValue(); 
        if (eliminarDirectorio == null) {
            JOptionPane.showMessageDialog(this, "No se ha eliminado ningun archivo");
        } else {  
                controladorDirectorio.eliminarDirectorio(eliminarDirectorio, jTextField1.getText());
                int confirmacion = JOptionPane.showConfirmDialog(this, "Seguro de eliminar este archivo");
                if (confirmacion == JOptionPane.YES_OPTION) {
                    JOptionPane.showMessageDialog(this, "Archivo eliminado exitosamente");
                    limpiarLista();
                    List<String> lista = controladorDirectorio.listarDirectorios(jTextField1.getText());
                    mostrarLista(lista);
                }
             else {
                JOptionPane.showMessageDialog(this, "Este archivo no existe intente otra vez");
            }

        }
    }//GEN-LAST:event_jEliminarActionPerformed

    private void jCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCrearActionPerformed
   
     String crearDirectorio = "";
        crearDirectorio = JOptionPane.showInputDialog("Ingrese  el nombre del nuevo directorio");
     
        String ruta = jTextField1.getText();

        if (crearDirectorio != null && ruta != null) {
            JOptionPane.showMessageDialog(this, "Se ha creado correctamente");
            try {
                controladorDirectorio.crearDirectorio(crearDirectorio, ruta);
                limpiarLista();
                List<String> lista = controladorDirectorio.listarDirectorios(ruta);
                mostrarLista(lista);
            } catch (IOException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (crearDirectorio == null) {
            JOptionPane.showMessageDialog(this, "Compa no se ha ingresado nada");
        } else if (ruta.equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese una ruta para crear un nuevo directorio");
        }
    }//GEN-LAST:event_jCrearActionPerformed

    private void btnListarDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarDActionPerformed
 limpiarLista();
        String ruta = jTextField1.getText();

        if (ruta.equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese una ruta");
        } else {
            if (comprobar(ruta)) {
                List<String> lista = controladorDirectorio.listarDirectorios(ruta);
                if (lista == null) {
                    JOptionPane.showMessageDialog(this, "No existe esta ruta");
                } else {
                    if (ruta.equals("")) {
                        JOptionPane.showMessageDialog(this, "Ingrese una ruta");
                    } else {
                        //ctrlDirectorio.listarDirectorios(txtRuta.getText());
                        List<String> listaD = controladorDirectorio.listarDirectorios(ruta);
                        mostrarLista(listaD);
                        //listaDirectorios();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "No existe ese directorio");
            }
        }
    }//GEN-LAST:event_btnListarDActionPerformed

    private void jRenombrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRenombrarActionPerformed
  String actual = listaDeDirectorios.getSelectedValue();
        //System.out.println(actual );
        String nuevo = JOptionPane.showInputDialog("Ingrese nuevo nombre del archivo: " + actual);
        controladorDirectorio.renombrar(actual, nuevo);
        limpiarLista();
        List<String> lista = controladorDirectorio.listarDirectorios(jTextField1.getText());
        mostrarLista(lista);
    }//GEN-LAST:event_jRenombrarActionPerformed

    private void jSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSalirActionPerformed
 System.exit(0);
    }//GEN-LAST:event_jSalirActionPerformed

    private void btnListarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarAActionPerformed
   limpiarLista();
        String ruta = jTextField1.getText();

        if (ruta.equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese una ruta");
        } else {
            if (comprobar(ruta)) {
                List<String> lista = controladorDirectorio.listarArchivosOcultos(ruta);
                if (lista == null) {
                    JOptionPane.showMessageDialog(this, "No existe esta ruta");
                } else {
                    if (ruta.equals("")) {
                        JOptionPane.showMessageDialog(this, "Ingrese una ruta");
                    } else {
                        List<String> listaDO = controladorDirectorio.listarArchivosOcultos(ruta);
                        limpiarLista();
                        mostrarLista(listaDO);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "No existe ese directorio");
            }
        }                                                         
    }//GEN-LAST:event_btnListarAActionPerformed

    private void btnListarDOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarDOActionPerformed
     limpiarLista();
        String ruta = jTextField1.getText();

        if (ruta.equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese una ruta");
        } else {
            if (comprobar(ruta)) {
                List<String> lista = controladorDirectorio.listarDirectoriosOcultos(ruta);
                if (lista == null) {
                    JOptionPane.showMessageDialog(this, "No existe esta ruta");
                } else {
                    if (ruta.equals("")) {
                        JOptionPane.showMessageDialog(this, "Ingrese una ruta");
                    } else {
                        List<String> listaDO = controladorDirectorio.listarDirectoriosOcultos(ruta);
                        limpiarLista();
                        mostrarLista(listaDO);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "No existe ese directorio");
            }
        }
    }//GEN-LAST:event_btnListarDOActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
         String Directorio = listaDeDirectorios.getSelectedValue();
        if (Directorio == null) {
            JOptionPane.showMessageDialog(this, "Seleccione un archivo");
            limpiarLista();
            List<String> lista = controladorDirectorio.listarDirectorios(jTextField1.getText());
            mostrarLista(lista);
        } else {
            jMostrarInformacion.setText(controladorDirectorio.mostrarInformacion(Directorio, jTextField1.getText()));
        }
    }//GEN-LAST:event_btnMostrarActionPerformed
public boolean comprobar(String ruta) {
        //String r = txtRuta.getText();
        File comprobacion = new File(ruta);
        if (comprobacion.exists()) {
            return true;
        } else {
            //
            return false;
        }
    }

    
    
    public void limpiarLista() {
        DefaultListModel model = new DefaultListModel();
        model.clear();
        listaDeDirectorios.setModel(model);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListarA;
    private javax.swing.JButton btnListarD;
    private javax.swing.JButton btnListarDO;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JMenuItem jCrear;
    private javax.swing.JMenuItem jEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuGestionar;
    private javax.swing.JTextArea jMostrarInformacion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuItem jRenombrar;
    private javax.swing.JMenuItem jSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JList<String> listaDeDirectorios;
    // End of variables declaration//GEN-END:variables


}
